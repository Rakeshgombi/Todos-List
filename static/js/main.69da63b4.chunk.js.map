{"version":3,"sources":["MyComponents/Header.js","MyComponents/TodoItem.js","MyComponents/Todos.js","MyComponents/AddToDo.js","MyComponents/Footer.js","MyComponents/About.js","App.js","serviceWorker.js","index.js"],"names":["Header","props","className","to","title","type","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","aria-current","searchbar","placeholder","defaultProps","TodoItem","todo","onDelete","desc","onClick","Todos","style","minHeight","background","todos","length","map","key","sno","AddToDo","addTodo","useState","setTitle","setDesc","onSubmit","e","preventDefault","alert","htmlFor","value","onChange","target","aria-describedby","Footer","About","App","initTodo","localStorage","getItem","JSON","parse","setTodos","filter","setItem","stringify","myTodo","useEffect","searchBar","exact","path","render","Boolean","window","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"+PAIe,SAASA,EAAOC,GAC9B,OACC,6BACC,yBAAKC,UAAU,+CACd,yBAAKA,UAAU,mBACd,kBAAC,IAAD,CAAMA,UAAU,eAAeC,GAAG,eAAeF,EAAMG,OACvD,4BAAQF,UAAU,iBAAiBG,KAAK,SAASC,iBAAe,WAAWC,iBAAe,0BAA0BC,gBAAc,yBAAyBC,gBAAc,QAAQC,aAAW,qBAC3L,0BAAMR,UAAU,yBAEjB,yBAAKA,UAAU,2BAA2BS,GAAG,0BAC5C,wBAAIT,UAAU,mCACb,wBAAIA,UAAU,YACb,kBAAC,IAAD,CAAMA,UAAU,kBAAkBU,eAAa,OAAOT,GAAG,eAAzD,SAED,wBAAID,UAAU,YACb,kBAAC,IAAD,CAAMA,UAAU,WAAWC,GAAG,qBAA9B,WAGDF,EAAMY,UAAY,0BAAMX,UAAU,UAClC,2BAAOA,UAAU,oBAAoBG,KAAK,SAASS,YAAY,SAASJ,aAAW,WACnF,4BAAQR,UAAU,0BAA0BG,KAAK,UAAjD,WACS,OAQhBL,EAAOe,aAAe,CACrBX,MAAO,kBACPS,WAAW,GCjCL,IAAMG,EAAW,SAAC,GAAwB,IAAtBC,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,SAChC,OACC,oCACA,yBAAKhB,UAAU,QACf,6BACC,4BAAKe,EAAKb,OACV,2BAAIa,EAAKE,MACT,4BAAQjB,UAAU,wBAAwBkB,QAAS,WAAQF,EAASD,KAApE,aCNUI,EAAQ,SAACpB,GAKrB,OACC,yBAAKC,UAAU,qBAAqBoB,MALlB,CACjBC,UAAW,OACXC,WAAY,SAIZ,wBAAItB,UAAU,KAAd,cACsB,IAArBD,EAAMwB,MAAMC,OAAY,oBACzBzB,EAAMwB,MAAME,KAAI,SAACV,GAChB,OAAO,kBAAC,EAAD,CAAUA,KAAMA,EAAMW,IAAKX,EAAKY,IAAKX,SAAUjB,EAAMiB,gBCXnDY,EAAU,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QAAc,EACbC,mBAAS,IADI,mBAChC5B,EADgC,KACzB6B,EADyB,OAEfD,mBAAS,IAFM,mBAEhCb,EAFgC,KAE1Be,EAF0B,KAevC,OACC,yBAAKhC,UAAU,kBACd,0CACA,0BAAMiC,SAdO,SAACC,GACfA,EAAEC,iBACGjC,GAAUe,GAIdY,EAAQ3B,EAAOe,GACfc,EAAS,IACTC,EAAQ,KALRI,MAAM,0CAYL,yBAAKpC,UAAU,QACd,2BAAOqC,QAAQ,QAAQrC,UAAU,cAAjC,cACA,2BAAOG,KAAK,OAAOmC,MAAOpC,EAAOqC,SAAU,SAACL,GAAD,OAAOH,EAASG,EAAEM,OAAOF,QAAQtC,UAAU,eAAeS,GAAG,QAAQgC,mBAAiB,WAElI,yBAAKzC,UAAU,QACd,2BAAOqC,QAAQ,OAAOrC,UAAU,cAAhC,eACA,2BAAOG,KAAK,OAAOmC,MAAOrB,EAAMsB,SAAU,SAACL,GAAD,OAAOF,EAAQE,EAAEM,OAAOF,QAAQtC,UAAU,eAAeS,GAAG,UAEvG,4BAAQN,KAAK,SAASH,UAAU,0BAAhC,aC1BS0C,EAAS,WACrB,OACC,4BAAQ1C,UAAU,2BACjB,uBAAGA,UAAU,eAAb,iCCHU2C,EAAQ,WACpB,OACC,6BACA,0DACA,sY,OCmEaC,MA1Df,WACC,IAAIC,EAEHA,EADqC,OAAlCC,aAAaC,QAAQ,SACb,GAGAC,KAAKC,MAAMH,aAAaC,QAAQ,UAG5C,IAAM/B,EAAW,SAACD,GACjBmC,EAAS3B,EAAM4B,QAAO,SAACjB,GACtB,OAAOA,IAAMnB,MAEd+B,aAAaM,QAAQ,QAASJ,KAAKK,UAAU9B,KAExCM,EAAU,SAAC3B,EAAOe,GACvB,IAOMqC,EAAS,CACd3B,IAPoB,IAAjBJ,EAAMC,OACH,EAGAD,EAAMA,EAAMC,OAAS,GAAGG,IAAM,EAIpCzB,MAAOA,EACPe,KAAMA,GAEPiC,EAAS,GAAD,mBAAK3B,GAAL,CAAY+B,MA5BP,EA8BYxB,mBAASe,GA9BrB,mBA8BPtB,EA9BO,KA8BA2B,EA9BA,KAmCd,OAJAK,qBAAU,WACTT,aAAaM,QAAQ,QAASJ,KAAKK,UAAU9B,MAC3C,CAACA,IAGH,oCACC,kBAAC,IAAD,KACG,kBAACzB,EAAD,CAAQI,MAAM,gBAAgBsD,WAAW,IACzC,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,oBAAoBC,OAAQ,WAC5C,OACA,oCACA,kBAAC,EAAD,CAAS9B,QAASA,IAClB,kBAAC,EAAD,CAAON,MAAOA,EAAOP,SAAUA,QAIjC,kBAAC,IAAD,CAAOyC,OAAK,EAACC,KAAK,qBAChB,kBAAC,EAAD,QAGN,kBAAC,EAAD,SCxDcE,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASN,OAAO,kBAAC,EAAD,MAASO,SAASC,eAAe,SD6H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.69da63b4.chunk.js","sourcesContent":["import React from 'react'\nimport PropTypes from \"prop-types\"\nimport {Link} from \"react-router-dom\";\n\nexport default function Header(props) {\n\treturn (\n\t\t<div>\n\t\t\t<nav className=\"navbar navbar-expand-lg navbar-dark bg-dark\">\n\t\t\t\t<div className=\"container-fluid\">\n\t\t\t\t\t<Link className=\"navbar-brand\" to=\"/todos-list\">{props.title}</Link>\n\t\t\t\t\t<button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n\t\t\t\t\t\t<span className=\"navbar-toggler-icon\"></span>\n\t\t\t\t\t</button>\n\t\t\t\t\t<div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n\t\t\t\t\t\t<ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\n\t\t\t\t\t\t\t<li className=\"nav-item\">\n\t\t\t\t\t\t\t\t<Link className=\"nav-link active\" aria-current=\"page\" to=\"/todos-list\">Home</Link>\n\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t<li className=\"nav-item\">\n\t\t\t\t\t\t\t\t<Link className=\"nav-link\" to=\"/todos-list/about\">About</Link>\n\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t</ul>\n\t\t\t\t\t\t{props.searchbar ? <form className=\"d-flex\">\n\t\t\t\t\t\t\t<input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\" />\n\t\t\t\t\t\t\t<button className=\"btn btn-outline-success\" type=\"submit\">Search</button>\n\t\t\t\t\t\t</form> : \"\"}\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</nav>\n\t\t</div>\n\t)\n}\n\nHeader.defaultProps = {\n\ttitle: \"Your Title Here\",\n\tsearchbar: false\n}\n\nHeader.propTypes = {\n\ttitle: PropTypes.string,\n\tsearchbar: PropTypes.bool.isRequired\n}","import React from 'react'\n\nexport const TodoItem = ({ todo, onDelete }) => {\n\treturn (\n\t\t<>\n\t\t<div className=\"my-2\">\n\t\t<hr />\n\t\t\t<h3>{todo.title}</h3>\n\t\t\t<p>{todo.desc}</p>\n\t\t\t<button className=\"btn btn-sm btn-danger\" onClick={() => { onDelete(todo) }}>delete</button>\n\t\t</div>\n\t\t</>\n\t)\n}\t","import React from 'react'\nimport { TodoItem } from \"./TodoItem\";\n\nexport const Todos = (props) => {\n\tconst todosStyle = {\n\t\t\tminHeight: \"50vh\",\n\t\t\tbackground: \"#ddd\"\n\t}\n\treturn (\n\t\t<div className=\"container my-3 p-3\" style={todosStyle}>\n\t\t\t<h2 className=\"r\">Todos List</h2>\n\t\t\t{props.todos.length===0? \"NO TODOS TO LISTS\":\n\t\t\tprops.todos.map((todo) => {\n\t\t\t\treturn <TodoItem todo={todo} key={todo.sno} onDelete={props.onDelete} />\n\t\t\t})}\n\t\t</div>\n\t)\n}","import React, { useState } from 'react'\n\nexport const AddToDo = ({ addTodo }) => {\n\tconst [title, setTitle] = useState(\"\");\n\tconst [desc, setDesc] = useState(\"\");\n\n\tconst submit = (e) => {\n\t\te.preventDefault();\n\t\tif (!title || !desc) {\n\t\t\talert(\"Title or Description cannot be blank\");\n\t\t}\n\t\telse {\n\t\t\taddTodo(title, desc);\n\t\t\tsetTitle(\"\");\n\t\t\tsetDesc(\"\");\n\t\t}\n\t}\n\treturn (\n\t\t<div className=\"container my-4\">\n\t\t\t<h3>Add a Todo</h3>\n\t\t\t<form onSubmit={submit}>\n\t\t\t\t<div className=\"mb-2\">\n\t\t\t\t\t<label htmlFor=\"title\" className=\"form-label\">Todo Title</label>\n\t\t\t\t\t<input type=\"text\" value={title} onChange={(e) => setTitle(e.target.value)} className=\"form-control\" id=\"title\" aria-describedby=\"title\" />\n\t\t\t\t</div>\n\t\t\t\t<div className=\"mb-2\">\n\t\t\t\t\t<label htmlFor=\"desc\" className=\"form-label\">Description</label>\n\t\t\t\t\t<input type=\"text\" value={desc} onChange={(e) => setDesc(e.target.value)} className=\"form-control\" id=\"desc\" />\n\t\t\t\t</div>\n\t\t\t\t<button type=\"submit\" className=\"btn btn-success btn-sm\">Submit</button>\n\t\t\t</form>\n\t\t</div>\n\t)\n}\t","import React from 'react'\n\n\nexport const Footer = () => {\n\treturn (\n\t\t<footer className=\"bg-dark text-light py-3\">\n\t\t\t<p className=\"text-center\">\n\t\t\t\tCopyright &copy; Todolist.com\n\t\t</p>\n\t\t</footer>\n\t)\n}","import React from 'react'\n\n\nexport const About = () => {\n\treturn (\n\t\t<div>\n\t\t<h3>This is an About Component</h3>\n\t\t<p>In the above code, we've created a Delete button, which will call the onDelete function once the user clicks on it and the particular todo item will be removed from the list. With this, we're done with the development of the Delete button. Restart the development server and you will notice that the delete button is working as shown in the below animation </p>\n\t\t</div>\n\t)\n}","// import React from 'react';\nimport './App.css';\nimport Header from \"./MyComponents/Header\";\nimport { Todos } from \"./MyComponents/Todos\";\nimport { TodoItem } from \"./MyComponents/TodoItem\";\nimport { AddToDo } from \"./MyComponents/AddToDo\";\nimport { Footer } from \"./MyComponents/Footer\";\n\nimport { About } from \"./MyComponents/About\";\nimport React, { useState, useEffect } from 'react';\nimport {\n\tBrowserRouter as Router,\n\tSwitch,\n\tRoute,\n} from \"react-router-dom\";\n\nfunction App() {\n\tlet initTodo;\n\tif (localStorage.getItem(\"todos\") === null) {\n\t\tinitTodo = [];\n\t}\n\telse {\n\t\tinitTodo = JSON.parse(localStorage.getItem(\"todos\"));\n\t}\n\n\tconst onDelete = (todo) => {\n\t\tsetTodos(todos.filter((e) => {\n\t\t\treturn e !== todo;\n\t\t}))\n\t\tlocalStorage.setItem(\"todos\", JSON.stringify(todos));\n\t}\n\tconst addTodo = (title, desc) => {\n\t\tlet sno;\n\t\tif (todos.length === 0) {\n\t\t\tsno = 0;\n\t\t}\n\t\telse {\n\t\t\tsno = todos[todos.length - 1].sno + 1;\n\t\t}\n\t\tconst myTodo = {\n\t\t\tsno: sno,\n\t\t\ttitle: title,\n\t\t\tdesc: desc\n\t\t}\n\t\tsetTodos([...todos, myTodo])\n\t}\n\tconst [todos, setTodos] = useState(initTodo);\n\tuseEffect(() => {\n\t\tlocalStorage.setItem(\"todos\", JSON.stringify(todos));\n\t}, [todos])\n\n\treturn (\n\t\t<>\n\t\t\t<Router>\n      <Header title=\"My Todos List\" searchBar={false} /> \n      <Switch>\n          <Route exact path=\"/todos-list/about\" render={()=>{\n            return(\n            <>\n            <AddToDo addTodo={addTodo} />\n            <Todos todos={todos} onDelete={onDelete} /> \n            </>)\n          }}> \n          </Route>\n          <Route exact path=\"/todos-list/about\">\n            <About />\n          </Route> \n        </Switch> \n      <Footer />\n    </Router>\n\t\t</>\n\t);\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}